name: 'Manual Deployment'
on:
  workflow_dispatch:
    inputs:
      modules_to_deploy:
        description: List of modules to deploy (space separated). If left blank then all modules will get deployed
        type: string
        default: homes-core decision-centre broker-portal integration-services question-management-system doc-comms
      environment:
        description: Environment
        type: environment
        required: true
      test_level:
        description: Apex Unit Tests Level
        type: choice
        required: true
        options:
          - NoTestRun
          - RunAllTestsInOrg
          - RunLocalTests
          - RunSpecifiedTests
        default: RunLocalTests  
      specified_tests:
        description: Apex Unit Tests (space separated). Keep input empty if you didn't select RunSpecifiedTests
        type: string
        required: false
      base_ref:
        description: Ref to compare (usually "develop"); Used to generate delta package
        required: false
        type: string 

  workflow_call:
    inputs:
      environment:
        description: Environment
        type: string
        required: true
      modules_to_deploy:
        description: List of modules to deploy (space separated). If left blank then all modules will get deployed
        required: true
        type: string
        default: homes-core decision-centre broker-portal integration-services question-management-system doc-comms
      base_ref:
        description: Ref to compare (usually "develop"); Used to generate delta package
        required: false
        type: string
      test_level:
        description: Apex Unit Tests Level
        required: false
        type: string
      specified_tests:
        description: Apex Unit Tests (space separated). Keep input empty if you didn't select RunSpecifiedTests
        required: false
        type: string  
      is_release_branch:
        description: Indicates if this is a release branch
        type: boolean
        required: false

jobs:
  deploy-changes:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      WORKING_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      SF_CLI_VERSION: ${{ vars.SF_CLI_VERSION }}
      SKIP_ORG_INTERACTION: ${{ vars.SKIP_ORG_INTERACTION }}
      # Sets the deployment destination from sfdx-project.json
      SF_APPLY_REPLACEMENTS_ON_CONVERT: ${{ vars.SF_APPLY_REPLACEMENTS_ON_CONVERT }}
      API_MORTGAGE_ONBOARDING_PASSTHRU: ${{ vars.API_MORTGAGE_ONBOARDING_PASSTHRU }}
      DEPLOY_DESTINATION: ${{ vars.DEPLOY_DESTINATION }}
      ALLOW_INACTIVE_FLOW_DELETION: ${{ vars.ALLOW_INACTIVE_FLOW_DELETION }}
      IS_OMNI_STUDIO_ENABLED: ${{ vars.IS_OMNI_STUDIO_ENABLED }}
      IS_RELEASE_BRANCH: ${{ inputs.is_release_branch }}
    outputs:
      should_notify: ${{ steps.check.outputs.should_notify }}  
    steps:
      - name: Validate ServiceNow Ticket
        uses: santandergroup-uk/alm-openshift-reusable-workflows/.github/actions/snow@lts
        with:
          snow-reference: ${{ vars.SNOW_REFERENCE }}
          client-secret: ${{ secrets.SDLCAUTO_SNOW_CLIENT_SECRET }}
          private-key: ${{ secrets.SDLCAUTO_SNOW_JWT_PRIVATE_KEY }}
          project-name: ${{ vars.SNOW_PROJECT_NAME }}
          deployment-type: "SALESFORCE"
        if: ${{ vars.IS_DEPLOY_DESTINATION_PRODUCTION == 'true' }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get npm directory
        id: npm-dir
        run: echo "${{ github.event.action }}"
